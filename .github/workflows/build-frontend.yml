name: Publish Angular Skeleton to GHCR

on:
  push:
    # Only run this workflow if it is a commit to main.
    branches:
      - main
    # Only run this workflow if the commit has modified files from frontend
    paths:
      - web/**

env:
  IMAGE_NAME: eccountant-web

jobs:
  # Push image to GitHub Packages.
  # See also https://docs.docker.com/docker-hub/builds/
  deploy-frontend:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    defaults:
      run:
        working-directory: web

    steps:
      - uses: actions/checkout@v2

      - name: Ensure environment.ts exists
        run: |
          if [ ! -f src/environments/environment.ts ]; then
            echo "export const environment = { production: false };" > src/environments/environment.ts
            echo "export default environment;" >> src/environments/environment.ts
          fi

      - name: Create environment.prod.ts
        run: |
          echo "export const environment = {" > src/environments/environment.prod.ts
          echo "  production: true," >> src/environments/environment.prod.ts
          echo "  auth0_audience: '${{ secrets.AUTH0_AUDIENCE }}'," >> src/environments/environment.prod.ts
          echo "  auth0_domain: '${{ secrets.AUTH0_DOMAIN }}'," >> src/environments/environment.prod.ts
          echo "  auth0_client_id: '${{ secrets.AUTH0_CLIENT_ID }}'," >> src/environments/environment.prod.ts
          echo "  api_url: '${{ secrets.PROD_API_URL }}'," >> src/environments/environment.prod.ts
          # Add any other environment variables here
          echo "};" >> src/environments/environment.prod.ts
          echo "export default environment;" >> src/environments/environment.prod.ts

      - name: Build image
        run: docker build . --file Dockerfile --tag $IMAGE_NAME

      - name: Log into GitHub Container Registry
        # TODO: Create a Personal Access Tokens (PAT) with `read:packages` and `write:packages` scopes and save it as an Actions secret `CR_PAT`
        run: echo "${{ secrets.CR_PAT }}" | docker login https://ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Push image to GitHub Container Registry
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME
          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          # Use Docker `latest` tag convention
          [ "$VERSION" == "main" ] && VERSION=latest
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION
    environment: web